{"type":"group","name":"partytarrrgets","enabled":true,"items":[{"type":"function","name":"README","enabled":true,"code":"//Enter the function here\n/*\n\nREADME\n\nPartyTarrrgets is a party target listening package specifically made to use GMCP and avoid Illusions.\n\nThis package uses the Eleusis standard calls for both setting the raid leader and for listening to targets:\n\nLeader: (Party): ____ says \"I am calling targets, focus your fire on my command.\"\n\nTarget calls: (Party): ____ says \"Target changed to <target>.\"\n\nSET LEADER <leader> will manually set the leader, in case you join a party late. The leader's name is case sensitive.\n\nPTLISTEN ON: Starts listening for targets. This is automatically on login.\n\nPTLISTEN OFF: Stops listening for targets.\n\nNow recognizes multiple target callers!\n\nCLEAR LEADER will remove all target callers from your list of acceptable target callers. This is automatically done on login.\n\nCHECK LEADER: Show a list of all current target callers.\n\nAny questions can be sent to Argwin\n\n*/"},{"type":"function","name":"onLoad","enabled":true,"code":"/*var raidLeader = [];\nset_variable(\"RAIDLEADER\", raidLeader);\nset_variable(\"ptlisten\", true);*/\n\nraidleader = [];\nptlisten = true;\ndisplay_notice(\"Listening to target calling\", \"yellow\");"},{"type":"function","name":"onGMCP","enabled":true,"code":"//Watch gmcp comm channel for leader target calls\n\nif (args.gmcp_method == \"Comm.Channel.Text\") {\n  // display_notice(\"I'm in GMCP!\", \"orange\");\n    const talker = args.gmcp_args.talker;\n    let targetCall = args.gmcp_args.text;\n    // const raidLeader = get_variable(\"RAIDLEADER\");\n    \n    targetCall = targetCall.substring(targetCall.indexOf(\"(\"));\n\n    const re = /\\(Party\\)\\: \\w+ says, \\\"(?:Target changed to|Changed target to|Target change|Target|Targeting):? (.+).\\\"/;\n\n    const myArray = targetCall.match(re);\n    \n    if (myArray) {\n    \tlet calledTarget = myArray[1];\n        // let listen = get_variable(\"ptlisten\");\n        if (raidleader.includes(talker) && ptlisten == true) {\n            send_command(\"st \" + calledTarget);\n        }\n    }    \n}"},{"type":"trigger","name":"Set RAIDLEADER","enabled":true,"actions":[{"type":"script","enabled":true,"script":"//var raidLeader = get_variable(\"RAIDLEADER\");\nraidleader.push(args[1]);\n\n//set_variable('RAIDLEADER', raidLeader);\n\ndisplay_notice(\"Raid leader is: \" + args[1], \"green\");"}],"text":"^\\(Party\\)\\: (\\w+) says, \\\"I am (?:now )?calling targets[\\,,.](?: focus your fire on my command.)?\\\"$","matching":"regexp","whole_words":false,"case_sensitive":false},{"type":"alias","name":"Set LEADER manual","enabled":true,"actions":[{"type":"script","enabled":true,"script":"//var raidLeader = get_variable(\"RAIDLEADER\");\nraidleader.push(args[1]);\n//set_variable('RAIDLEADER', raidLeader);\n\ndisplay_notice(\"Raid leader is: \" + args[1], \"green\");"}],"text":"^set leader (\\w+)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"listen toggle","enabled":true,"actions":[{"type":"script","enabled":true,"script":"//Enter the script here\nconst listen = args[1];\n\nif (listen == \"on\") {\n    // set_variable(\"ptlisten\", true);\n    ptlisten = true;\n    display_notice(\"Listening to target calling\", \"yellow\");\n} else if (listen == \"off\") {\n    //set_variable(\"ptlisten\", false);\n    ptlisten = false;\n    display_notice(\"Ignoring targets!\", \"yellow\");\n}"}],"text":"ptlisten (on|off)","matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"Clear LEADER","enabled":true,"actions":[{"type":"script","enabled":true,"script":"//Enter the script here\nraidleader = [];\n//set_variable(\"RAIDLEADER\", raidLeader);\n\ndisplay_notice(\"All target callers have been removed.\", \"green\");"}],"text":"clear leader","matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true},{"type":"alias","name":"check leader","enabled":true,"actions":[{"type":"script","enabled":true,"script":"//Enter the script here\n//const raidleader = get_variable(\"RAIDLEADER\");\n\nlet str = \"Raid Leaders: \";\n\nraidleader.forEach(function(el) {\n  str += el + \", \";\n});\n\ndisplay_notice(str, \"white\");"}],"text":"check leaders","matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true}],"description":"Party Target Listening"}